logging.file.path=/logs
logging.file.name=lingo.log

# Context path for the application as a whole
server.servlet.context-path=/

# Database connection setup
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/postgres}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD :admin}

# Database platform configuration for Eclipselink
spring.jpa.database-platform=org.eclipse.persistence.platform.database.PostgreSQLPlatform
# Additional database-access specifics
spring.jpa.generate-ddl=true
spring.jpa.show-sql=false

# Kafka
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# application.properties allows to configure many more application parameters
app.jwtSecret= 9a02115a835ee03d5fb83cd8a468ea33e4090aaaec87f53c9fa54512bbef4db8dc656c82a315fa0c785c08b0134716b81ddcd0153d2a7556f2e154912cf5675f
app.jwtExpirationInMs = 604800000

# google
spring.security.oauth2.client.registration.google.client-id=4725967638-cf96333n42ipkd88gu5a1t9bd216ioc1.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
server.port=8080